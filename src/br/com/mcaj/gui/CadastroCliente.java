/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.mcaj.gui;

import br.com.mcaj.bdimg.ManipularImagem;
import br.com.mcaj.bean.BeanCliente;
import br.com.mcaj.conexao.BD;
import br.com.mcaj.dao.DaoCadCliente;
import br.com.mcaj.metodos.BloqueiaLetrasEnumeros;
import br.com.mcaj.metodos.LimitaCaracteres;
import br.com.mcaj.metodos.MascarasDeCampo;
import br.com.mcaj.metodos.MetodosCadClientes;
import br.com.mcaj.metodos.TratamentoData;
import br.com.mcaj.metodos.TratarTexto;
import br.com.mcaj.validacao.CNPJ;
import br.com.mcaj.validacao.CPF;
import br.com.mcaj.validacao.Email;
import br.com.mcaj.validacao.RG;
import br.com.mcaj.validacao.Telefone;
import br.com.mcaj.validacao.CNH;
import br.com.mcaj.webcam.TirarFotoDaWebcam;
import br.com.mcaj.webservice.BuscarCep;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Marcos
 */
public class CadastroCliente extends javax.swing.JFrame {

    private DaoCadCliente cliente;
    private BD bd;

    private BufferedImage imagemCliente = null;
    private BufferedImage imagemFaxadaCliente = null;
    private String DesejaGravar, Gravado, nGravar, Cancelar;
    private ButtonGroup confbotoes;
    private boolean fotohabilitada;

    /**
     * Creates new form CadastroCliente
     */
    public CadastroCliente() {
        initComponents();
        confJRadioButton();
        mascararCampos();
        txtCpf.setEnabled(false);
        btWhatsapp.setEnabled(false);
        configuracoesDeCampo();
        cliente = new DaoCadCliente();

        if (!cliente.bd.getConnection()) {
            JOptionPane.showMessageDialog(null,
                    "Falha na Conexao, o sistema sera fechada!");
            System.exit(0);
        }
        
        
        setBotoes(false, false, true, true, true);

        setCampos(false, false, false, false, false,
                false, false, false, false, false, false,
                false, false, false, false, false, false, false,
                false, false, false, false, false, false, false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        selecGravar = new javax.swing.JRadioButton();
        selecAtualizar = new javax.swing.JRadioButton();
        selecDeletar = new javax.swing.JRadioButton();
        painelDeComandos = new javax.swing.JPanel();
        btGravar = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        painelDoFrame = new javax.swing.JPanel();
        painelAbasClientes = new javax.swing.JTabbedPane();
        painelAbaDados = new javax.swing.JPanel();
        painelDadosClientes = new javax.swing.JPanel();
        lbCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lbNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lbDoc = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        jPanel7 = new javax.swing.JPanel();
        lbFotoCliente = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        lbTelFixo = new javax.swing.JLabel();
        lbWhatsapp = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lbNomeRecado = new javax.swing.JLabel();
        txtNomeRecado = new javax.swing.JTextField();
        lbTelRecado = new javax.swing.JLabel();
        lbCelRecado = new javax.swing.JLabel();
        txtTelRecado = new javax.swing.JFormattedTextField();
        txtCelRecado = new javax.swing.JFormattedTextField();
        btNovo = new javax.swing.JButton();
        cboTipoDoc = new javax.swing.JComboBox<>();
        jdcDataNasc = new com.toedter.calendar.JDateChooser();
        lbDataNasc = new javax.swing.JLabel();
        txtTel = new javax.swing.JFormattedTextField();
        txtCel = new javax.swing.JFormattedTextField();
        btWhatsapp = new javax.swing.JButton();
        btWebcam = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        btBuscaFoto = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        painelAbaEndereco = new javax.swing.JPanel();
        painelDeEndereco = new javax.swing.JPanel();
        txtEndereco = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        txtUf = new javax.swing.JTextField();
        lbCep = new javax.swing.JLabel();
        lbEndereco = new javax.swing.JLabel();
        lbBairro = new javax.swing.JLabel();
        lbCidade = new javax.swing.JLabel();
        lbUf = new javax.swing.JLabel();
        lbNumResidencia = new javax.swing.JLabel();
        txtNumResidencia = new javax.swing.JTextField();
        lbComplemento = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPontoReferencia = new javax.swing.JTextArea();
        lbReferencia = new javax.swing.JLabel();
        painelFotoFaxada = new javax.swing.JPanel();
        lbFotoFaxadaCliente = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setResizable(false);

        jPanel5.setBackground(new java.awt.Color(255, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comandos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setBackground(new java.awt.Color(51, 255, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Escolher", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        selecGravar.setText("Gravar");
        selecGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecGravarActionPerformed(evt);
            }
        });
        jPanel3.add(selecGravar);

        selecAtualizar.setText("Atualizar");
        selecAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecAtualizarActionPerformed(evt);
            }
        });
        jPanel3.add(selecAtualizar);

        selecDeletar.setText("Deletar");
        selecDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecDeletarActionPerformed(evt);
            }
        });
        jPanel3.add(selecDeletar);

        jPanel5.add(jPanel3);

        painelDeComandos.setBackground(new java.awt.Color(204, 255, 204));
        painelDeComandos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Executar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        btGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/savetheapplication_guardar_2958.png"))); // NOI18N
        btGravar.setText("Gravar");
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });
        painelDeComandos.add(btGravar);

        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/1486503744-backspace-clean-clear-delete-remove-erase_81258.png"))); // NOI18N
        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });
        painelDeComandos.add(btLimpar);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/Cancel_icon-icons.com_73703.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        painelDeComandos.add(btCancelar);

        jPanel5.add(painelDeComandos);

        painelDoFrame.setBackground(new java.awt.Color(255, 255, 153));
        painelDoFrame.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        painelAbasClientes.setBackground(new java.awt.Color(153, 153, 153));

        painelAbaDados.setBackground(new java.awt.Color(51, 102, 255));

        painelDadosClientes.setBackground(new java.awt.Color(153, 153, 153));
        painelDadosClientes.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        painelDadosClientes.setForeground(new java.awt.Color(0, 0, 0));

        lbCodigo.setForeground(new java.awt.Color(0, 0, 0));
        lbCodigo.setText("Codigo");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        lbNome.setForeground(new java.awt.Color(0, 0, 0));
        lbNome.setText("Nome");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });

        lbDoc.setForeground(new java.awt.Color(0, 0, 0));
        lbDoc.setText("DOC.");

        txtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfActionPerformed(evt);
            }
        });
        txtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCpfKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCpfKeyTyped(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setToolTipText("Carregar Foto");
        jPanel7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        lbFotoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        lbFotoCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFotoClienteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbFotoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbFotoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmailMouseClicked(evt);
            }
        });
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lbEmail.setForeground(new java.awt.Color(0, 0, 0));
        lbEmail.setText("E-mail");

        lbTelFixo.setForeground(new java.awt.Color(0, 0, 0));
        lbTelFixo.setText("Fixo");

        lbWhatsapp.setForeground(new java.awt.Color(0, 0, 0));
        lbWhatsapp.setText("Whatsapp");

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contato para Recado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbNomeRecado.setForeground(new java.awt.Color(0, 0, 0));
        lbNomeRecado.setText("Nome");
        jPanel4.add(lbNomeRecado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        txtNomeRecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeRecadoActionPerformed(evt);
            }
        });
        jPanel4.add(txtNomeRecado, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 620, -1));

        lbTelRecado.setForeground(new java.awt.Color(0, 0, 0));
        lbTelRecado.setText("TEL");
        jPanel4.add(lbTelRecado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 40, 30));

        lbCelRecado.setForeground(new java.awt.Color(0, 0, 0));
        lbCelRecado.setText("Whatsapp");
        jPanel4.add(lbCelRecado, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 80, 30));

        txtTelRecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelRecadoActionPerformed(evt);
            }
        });
        jPanel4.add(txtTelRecado, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 270, -1));

        txtCelRecado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCelRecadoMouseClicked(evt);
            }
        });
        txtCelRecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelRecadoActionPerformed(evt);
            }
        });
        jPanel4.add(txtCelRecado, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, 260, -1));

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/new_add_user_16734.png"))); // NOI18N
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        cboTipoDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha", "CPF", "CNPJ", "RG", "CNH" }));
        cboTipoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoDocActionPerformed(evt);
            }
        });
        cboTipoDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cboTipoDocKeyTyped(evt);
            }
        });

        jdcDataNasc.setToolTipText("");
        jdcDataNasc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdcDataNascKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jdcDataNascKeyTyped(evt);
            }
        });

        lbDataNasc.setForeground(new java.awt.Color(0, 0, 0));
        lbDataNasc.setText("Data Nasc.");

        txtTel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTelMouseClicked(evt);
            }
        });
        txtTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelActionPerformed(evt);
            }
        });
        txtTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelKeyTyped(evt);
            }
        });

        txtCel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelActionPerformed(evt);
            }
        });
        txtCel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCelKeyTyped(evt);
            }
        });

        btWhatsapp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/whatsapp_logo_icon_134452.png"))); // NOI18N
        btWhatsapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btWhatsappActionPerformed(evt);
            }
        });

        btWebcam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/webcam_cam_camera_10859 (1).png"))); // NOI18N
        btWebcam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btWebcamActionPerformed(evt);
            }
        });

        btBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/loupe_magnifying_glass_search_lens_icon_185980.png"))); // NOI18N

        btBuscaFoto.setIcon(new javax.swing.ImageIcon("C:\\Users\\Marcos\\Downloads\\gallery_128x128-32_22269.png")); // NOI18N
        btBuscaFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaFotoActionPerformed(evt);
            }
        });

        jButton1.setText("Foto ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelDadosClientesLayout = new javax.swing.GroupLayout(painelDadosClientes);
        painelDadosClientes.setLayout(painelDadosClientesLayout);
        painelDadosClientesLayout.setHorizontalGroup(
            painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                .addComponent(btWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscaFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)
                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbEmail)
                                    .addComponent(lbTelFixo)
                                    .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lbDoc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelDadosClientesLayout.createSequentialGroup()
                                .addComponent(lbCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome)
                            .addComponent(txtEmail)
                            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                        .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbWhatsapp, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btWhatsapp, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                        .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cboTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)
                                        .addComponent(lbDataNasc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jdcDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        painelDadosClientesLayout.setVerticalGroup(
            painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btNovo)
                            .addComponent(btBuscar)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbCodigo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboTipoDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jdcDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbDoc)
                                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbDataNasc))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbEmail))
                        .addGap(6, 6, 6)
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btWhatsapp, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbWhatsapp)
                                .addComponent(lbTelFixo)
                                .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btBuscaFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btWebcam))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelAbaDadosLayout = new javax.swing.GroupLayout(painelAbaDados);
        painelAbaDados.setLayout(painelAbaDadosLayout);
        painelAbaDadosLayout.setHorizontalGroup(
            painelAbaDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAbaDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelDadosClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        painelAbaDadosLayout.setVerticalGroup(
            painelAbaDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAbaDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelDadosClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelAbasClientes.addTab("Dados", painelAbaDados);

        painelAbaEndereco.setBackground(new java.awt.Color(51, 102, 255));

        painelDeEndereco.setBackground(new java.awt.Color(153, 153, 153));
        painelDeEndereco.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        painelDeEndereco.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoActionPerformed(evt);
            }
        });
        txtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEnderecoKeyTyped(evt);
            }
        });
        painelDeEndereco.add(txtEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 63, 491, -1));

        txtCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidadeActionPerformed(evt);
            }
        });
        txtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCidadeKeyTyped(evt);
            }
        });
        painelDeEndereco.add(txtCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 98, 491, -1));

        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });
        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBairroKeyTyped(evt);
            }
        });
        painelDeEndereco.add(txtBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 133, 491, -1));

        txtUf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUfKeyTyped(evt);
            }
        });
        painelDeEndereco.add(txtUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 168, 60, -1));

        lbCep.setText("CEP");
        painelDeEndereco.add(lbCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 31, -1, -1));

        lbEndereco.setText("ENDEREÇO");
        painelDeEndereco.add(lbEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 66, -1, -1));

        lbBairro.setText("BAIRRO");
        painelDeEndereco.add(lbBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 101, -1, -1));

        lbCidade.setText("CIDADE");
        painelDeEndereco.add(lbCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 136, -1, -1));

        lbUf.setText("UF");
        painelDeEndereco.add(lbUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 171, -1, -1));

        lbNumResidencia.setText("Nº");
        painelDeEndereco.add(lbNumResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, -1));

        txtNumResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumResidenciaActionPerformed(evt);
            }
        });
        txtNumResidencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumResidenciaKeyTyped(evt);
            }
        });
        painelDeEndereco.add(txtNumResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 113, -1));

        lbComplemento.setText("Complemento");
        painelDeEndereco.add(lbComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, -1, -1));

        txtComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComplementoActionPerformed(evt);
            }
        });
        txtComplemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComplementoKeyTyped(evt);
            }
        });
        painelDeEndereco.add(txtComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 170, -1));

        txtPontoReferencia.setColumns(20);
        txtPontoReferencia.setLineWrap(true);
        txtPontoReferencia.setRows(5);
        txtPontoReferencia.setName(""); // NOI18N
        txtPontoReferencia.setSelectionColor(new java.awt.Color(153, 255, 255));
        txtPontoReferencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPontoReferenciaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtPontoReferencia);

        painelDeEndereco.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 210, 491, -1));

        lbReferencia.setText("Ref.");
        painelDeEndereco.add(lbReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 210, -1, -1));

        painelFotoFaxada.setBorder(javax.swing.BorderFactory.createTitledBorder("Foto da Faxada"));
        painelFotoFaxada.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        painelFotoFaxada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelFotoFaxadaMouseClicked(evt);
            }
        });

        lbFotoFaxadaCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        lbFotoFaxadaCliente.setEnabled(false);
        lbFotoFaxadaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFotoFaxadaClienteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout painelFotoFaxadaLayout = new javax.swing.GroupLayout(painelFotoFaxada);
        painelFotoFaxada.setLayout(painelFotoFaxadaLayout);
        painelFotoFaxadaLayout.setHorizontalGroup(
            painelFotoFaxadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbFotoFaxadaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );
        painelFotoFaxadaLayout.setVerticalGroup(
            painelFotoFaxadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbFotoFaxadaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
        );

        painelDeEndereco.add(painelFotoFaxada, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, 350, 250));

        txtCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCepActionPerformed(evt);
            }
        });
        painelDeEndereco.add(txtCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 140, -1));

        javax.swing.GroupLayout painelAbaEnderecoLayout = new javax.swing.GroupLayout(painelAbaEndereco);
        painelAbaEndereco.setLayout(painelAbaEnderecoLayout);
        painelAbaEnderecoLayout.setHorizontalGroup(
            painelAbaEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAbaEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelDeEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        painelAbaEnderecoLayout.setVerticalGroup(
            painelAbaEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAbaEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelDeEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelAbasClientes.addTab("Endereço", painelAbaEndereco);

        javax.swing.GroupLayout painelDoFrameLayout = new javax.swing.GroupLayout(painelDoFrame);
        painelDoFrame.setLayout(painelDoFrameLayout);
        painelDoFrameLayout.setHorizontalGroup(
            painelDoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAbasClientes)
        );
        painelDoFrameLayout.setVerticalGroup(
            painelDoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDoFrameLayout.createSequentialGroup()
                .addComponent(painelAbasClientes)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelDoFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelDoFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed

        int resposta = JOptionPane.showConfirmDialog(null, DesejaGravar);
        if (resposta == JOptionPane.YES_OPTION) {
            if (selecGravar.isSelected()) {
                try {
                    Gravar();
                    LimparCampos();
                } catch (SQLException ex) {
                    Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } // TODO Auto-generated catch block
            if (selecAtualizar.isSelected()) {
                try {
                    Atualizar();
                    LimparCampos();
                } catch (SQLException ex) {
                    Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

            if (selecDeletar.isSelected()) {
                try {
                    deletar();
                    LimparCampos();
                } catch (SQLException ex) {
                    Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            JOptionPane.showMessageDialog(null, Gravado);

        } else if (resposta == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(null,
                    nGravar);

        } else if (resposta == JOptionPane.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(null,
                    Cancelar);

            return;
        }


    }//GEN-LAST:event_btGravarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void selecGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecGravarActionPerformed
        // TODO add your handling code here:

        DesejaGravar = "Deseja Gravar os Registros?";
        Gravado = "Registros Gravados no Banco!!!";
        nGravar = "Os registros não serão Gravados!!!";
        Cancelar = "Registros não foram Gravados!!!";

        if (selecGravar.isSelected() == true) {
            btGravar.setText("Gravar");
            btGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/savetheapplication_guardar_2958.png")));
            btGravar.setToolTipText("Gravar");
        }
        setBotoes(true, true, true, true, true);

    }//GEN-LAST:event_selecGravarActionPerformed

    private void selecAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecAtualizarActionPerformed
        // TODO add your handling code here:
        DesejaGravar = "Deseja Atualizar os Registros?";
        Gravado = "Registros Atualizados no Banco!!!";
        nGravar = "Os registros não serão Atualizados!!!";
        Cancelar = "Registros não foram Atualizados!!!";

        if (selecAtualizar.isSelected() == true) {
            btGravar.setText("Atualizar");
            btGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/refresh_arrows_14418.png")));
            btGravar.setToolTipText("Atualizar");

        }
        setBotoes(true, true, true, true, true);
    }//GEN-LAST:event_selecAtualizarActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        try {
            // TODO add your handling code here:
            buscarPorID();
        } catch (SQLException ex) {
            Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCepActionPerformed
        // TODO add your handling code here:
        BuscarCep buscaCep = new BuscarCep();
        buscaCep.buscarCep(txtCep, txtEndereco, txtCidade, txtBairro, txtUf);
    }//GEN-LAST:event_txtCepActionPerformed

    private void txtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfActionPerformed
        // TODO add your handling code here:
        String cpf = txtCpf.getText().trim();

        if (cboTipoDoc.getSelectedIndex() == 1) {
            CPF pf = new CPF(cpf, true);

            if (pf.isCPF()) {

            } else {
                JOptionPane.showMessageDialog(null, "CPF Invalido!!!", "Erro no CPF", JOptionPane.ERROR_MESSAGE);
                txtCpf.setValue("");
            }
        } else if (cboTipoDoc.getSelectedIndex() == 2) {
            CNPJ pj = new CNPJ(cpf, true);

            if (pj.isCNPJ()) {

            } else {
                JOptionPane.showMessageDialog(null, "CNPJ Invalido!!!", "Erro no CNPJ", JOptionPane.ERROR_MESSAGE);
                txtCpf.setValue("");
            }

        } else if (cboTipoDoc.getSelectedIndex() == 4) {
            CNH cnh = new CNH();

            if (cnh.validaCNH(cpf)) {

            } else {
                JOptionPane.showMessageDialog(null, "CNH Invalido!!!", "Erro na CNH", JOptionPane.ERROR_MESSAGE);
                txtCpf.setValue("");
            }

        } else if (cboTipoDoc.getSelectedIndex() == 3) {

            RG rg = new RG(cpf, true);
            boolean vRG = rg.checkRG(cpf);
            if (vRG == true) {

            } else {
                JOptionPane.showMessageDialog(null, "RG Invalido!!!", "Erro na RG", JOptionPane.ERROR_MESSAGE);
                txtCpf.setValue("");
            }

        }
    }//GEN-LAST:event_txtCpfActionPerformed

    private void jdcDataNascKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdcDataNascKeyReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_jdcDataNascKeyReleased

    private void jdcDataNascKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdcDataNascKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioLetras = new BloqueiaLetrasEnumeros();
        bloqueioLetras.bloqueiaLetras(evt);
    }//GEN-LAST:event_jdcDataNascKeyTyped

    private void cboTipoDocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboTipoDocKeyTyped
        // TODO add your handling code here:


    }//GEN-LAST:event_cboTipoDocKeyTyped

    private void cboTipoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoDocActionPerformed
        // TODO add your handling code here:

        int tipoDocumento = cboTipoDoc.getSelectedIndex();
        txtCpf.setValue(null);
        switch (tipoDocumento) {
            case 0:
                txtCpf.setEnabled(false);
                txtCpf.setFormatterFactory(CNH.getFormat());

                break;
            case 1:
                txtCpf.setEnabled(true);
                txtCpf.setFormatterFactory(CPF.getFormat());

                break;
            case 2:
                txtCpf.setEnabled(true);
                txtCpf.setFormatterFactory(CNPJ.getFormat());

                break;

            case 3:
                txtCpf.setEnabled(true);
                txtCpf.setFormatterFactory(RG.getFormat());

                break;
            case 4:
                txtCpf.setEnabled(true);
                txtCpf.setFormatterFactory(CNH.getFormat());

                break;
        }
    }//GEN-LAST:event_cboTipoDocActionPerformed

    private void txtCpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtCpfKeyReleased

    private void btWhatsappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btWhatsappActionPerformed
        // TODO add your handling code here:

        String cel = txtCel.getText();

        cel = cel.replace("(", "");
        cel = cel.replace(")", "");
        cel = cel.replace("-", "");
        cel = cel.trim();

        if (cel.equals("")) {
            JOptionPane.showMessageDialog(null, "Whatsapp Invalido!!! ", "Erro no Whatsapp", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            String whats = "https://api.whatsapp.com/send?1=pt_BR&phone=" + cel;
            System.out.println(whats);
            MetodosCadClientes app = new MetodosCadClientes();
            app.AbrirWhatsWeb(whats);
            JOptionPane.showMessageDialog(null, "Abrindo Whatsapp!!! ", "Whatsapp", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btWhatsappActionPerformed

    private void txtCelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelActionPerformed
        // TODO add your handling code here:
        String celular = txtCel.getText();

        Telefone validarCel = new Telefone();
        boolean cel = validarCel.validarTelefone(celular);
        if (cel == true) {
            JOptionPane.showMessageDialog(null, "Telefone Valido", "Telefone", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Telefone Invalido", "Erro no Telefone", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_txtCelActionPerformed

    private void txtTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelActionPerformed
        // TODO add your handling code here:
        Telefone validarTel = new Telefone();
        boolean teste = validarTel.validarTelefone(txtTel.getText());
        if (teste == true) {
            JOptionPane.showMessageDialog(null, "Telefone Valido", "Telefone", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Telefone Invalido", "Erro no Telefone", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtTelActionPerformed

    private void txtCpfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioLetras = new BloqueiaLetrasEnumeros();
        bloqueioLetras.bloqueiaLetras(evt);
    }//GEN-LAST:event_txtCpfKeyTyped

    private void txtTelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioLetras = new BloqueiaLetrasEnumeros();
        bloqueioLetras.bloqueiaLetras(evt);
    }//GEN-LAST:event_txtTelKeyTyped

    private void txtCelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelKeyTyped
        // TODO add your handling code here:
        String cel = txtCel.getText();
        Telefone validarCel = new Telefone();
        boolean teste = validarCel.validarTelefone(cel);
        cel = cel.replace("(", "");
        cel = cel.replace(")", "");
        cel = cel.replace("-", "");
        cel = cel.trim();
        if (cel.length() == 11 && teste == true) {
            btWhatsapp.setEnabled(true);
        }
        if (cel.length() < 11) {
            btWhatsapp.setEnabled(false);
        }

        BloqueiaLetrasEnumeros bloqueioLetras = new BloqueiaLetrasEnumeros();
        bloqueioLetras.bloqueiaLetras(evt);
    }//GEN-LAST:event_txtCelKeyTyped

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
        Email validarEmail = new Email();
        boolean email = validarEmail.isValidEmailAddress(txtEmail.getText());
        if (email == true) {
            JOptionPane.showMessageDialog(null, "Email Valido", "Email", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Email invalido", "Email", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
        TratarTexto texto = new TratarTexto();
        String textoValido = txtNome.getText();
        texto.validarNome(textoValido);

    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtNomeRecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeRecadoActionPerformed
        // TODO add your handling code here:

        TratarTexto texto = new TratarTexto();
        String textoValido = txtNomeRecado.getText();
        texto.validarNome(textoValido);
    }//GEN-LAST:event_txtNomeRecadoActionPerformed

    private void txtTelRecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelRecadoActionPerformed
        // TODO add your handling code here:
        Telefone validarTel = new Telefone();
        boolean teste = validarTel.validarTelefone(txtTelRecado.getText());
        if (teste == true) {
            JOptionPane.showMessageDialog(null, "Telefone Valido", "Telefone", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Telefone Invalido", "Erro no Telefone", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtTelRecadoActionPerformed

    private void txtCelRecadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCelRecadoMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            String cel = txtCelRecado.getText();

            cel = cel.replace("(", "");
            cel = cel.replace(")", "");
            cel = cel.replace("-", "");
            cel = cel.trim();

            if (cel.equals("")) {
                JOptionPane.showMessageDialog(null, "Whatsapp Invalido!!! ", "Erro no Whatsapp", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                String whats = "https://api.whatsapp.com/send?1=pt_BR&phone=" + cel;
                System.out.println(whats);
                MetodosCadClientes app = new MetodosCadClientes();
                app.AbrirWhatsWeb(whats);
            }
        }
    }//GEN-LAST:event_txtCelRecadoMouseClicked

    private void txtCelRecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelRecadoActionPerformed
        // TODO add your handling code here:
        String celular = txtCelRecado.getText();

        Telefone validarCel = new Telefone();
        boolean cel = validarCel.validarTelefone(celular);
        if (cel == true) {
            JOptionPane.showMessageDialog(null, "Telefone Valido", "Telefone", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Telefone Invalido", "Erro no Telefone", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txtCelRecadoActionPerformed

    private void txtEmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailMouseClicked
        // TODO add your handling code here:
        Email validarEmail = new Email();
        boolean vemail = validarEmail.isValidEmailAddress(txtEmail.getText());
        if (evt.getClickCount() == 2) {

            if (vemail == true) {

                String email = txtEmail.getText();
                String Link = "mailto:" + email;
                System.out.println(Link);
                if (email.equals("")) {
                    JOptionPane.showMessageDialog(null, "Não posso abrir o Gerenciador de e-mail", "Campo de Email Vazio", JOptionPane.ERROR_MESSAGE);
                } else {
                    MetodosCadClientes app = new MetodosCadClientes();
                    app.AbrirWhatsWeb(Link);
                    JOptionPane.showMessageDialog(null, "O Gerenciador de E-mail será Aberto!!!", "Enviar Email pelo Gerenciador", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Esse email não é valido", "Email Invalido", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtEmailMouseClicked

    private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaNumeros(evt);
    }//GEN-LAST:event_txtNomeKeyTyped

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoActionPerformed
        // TODO add your handling code here:
        TratarTexto texto = new TratarTexto();
        String textoValido = txtEndereco.getText();
        texto.validarRua(textoValido);

    }//GEN-LAST:event_txtEnderecoActionPerformed

    private void txtEnderecoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnderecoKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaNumeros(evt);
    }//GEN-LAST:event_txtEnderecoKeyTyped

    private void txtUfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUfKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaNumeros(evt);
    }//GEN-LAST:event_txtUfKeyTyped

    private void txtCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidadeActionPerformed
        // TODO add your handling code here:
        TratarTexto texto = new TratarTexto();
        String textoValido = txtCidade.getText();
        texto.validarNome(textoValido);
    }//GEN-LAST:event_txtCidadeActionPerformed

    private void txtCidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaNumeros(evt);
    }//GEN-LAST:event_txtCidadeKeyTyped

    private void txtBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaNumeros(evt);
    }//GEN-LAST:event_txtBairroKeyTyped

    private void txtNumResidenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumResidenciaKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaCE(evt);
    }//GEN-LAST:event_txtNumResidenciaKeyTyped

    private void txtComplementoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComplementoKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaCE(evt);
    }//GEN-LAST:event_txtComplementoKeyTyped

    private void txtPontoReferenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPontoReferenciaKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioNumeros = new BloqueiaLetrasEnumeros();
        bloqueioNumeros.bloqueiaCE(evt);
    }//GEN-LAST:event_txtPontoReferenciaKeyTyped

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
        TratarTexto texto = new TratarTexto();
        String textoValido = txtBairro.getText();
        texto.validarNome(textoValido);
    }//GEN-LAST:event_txtBairroActionPerformed

    private void txtTelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            String tel = txtTel.getText();

            tel = tel.replace("(", "");
            tel = tel.replace(")", "");
            tel = tel.replace("-", "");
            tel = tel.trim();

            if (tel.equals("")) {
                JOptionPane.showMessageDialog(null, "Whatsapp Invalido!!! ", "Erro no Whatsapp", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                String whats = "tel:" + tel;
                System.out.println(whats);
                MetodosCadClientes app = new MetodosCadClientes();
                app.AbrirWhatsWeb(whats);
            }
        }
    }//GEN-LAST:event_txtTelMouseClicked

    private void btWebcamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btWebcamActionPerformed
        // TODO add your handling code here:

        TirarFotoDaWebcam app = new TirarFotoDaWebcam();
        app.setVisible(true);


    }//GEN-LAST:event_btWebcamActionPerformed

    private void btBuscaFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaFotoActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Escolha a Foto: ");
        fc.setFileFilter(new FileNameExtensionFilter("Arquivo(.jpg | .png)",
                "jpg", "png"));
        fc.setAcceptAllFileFilterUsed(false);
        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();

            try {
                imagemCliente = ManipularImagem.setImagemDimensao(arquivo.getAbsolutePath(), 150, 200);

                lbFotoCliente.setIcon(new ImageIcon(imagemCliente));

            } catch (Exception ex) {
                // System.out.println(ex.printStackTrace().toString());
            }

        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
        }
    }//GEN-LAST:event_btBuscaFotoActionPerformed

    private void lbFotoFaxadaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFotoFaxadaClienteMouseClicked
        // TODO add your handling code here:
        if (fotohabilitada == false){
            
        } else {
            if (evt.getClickCount() == 2) {
                lbFotoFaxadaCliente.setIcon(null);
                JFileChooser fc = new JFileChooser();
                fc.setDialogTitle("Escolha a Foto: ");
                fc.setFileFilter(new FileNameExtensionFilter("Arquivo(.jpg | .png)",
                        "jpg", "png"));
                fc.setAcceptAllFileFilterUsed(false);
                int res = fc.showOpenDialog(null);
                
                if (res == JFileChooser.APPROVE_OPTION) {
                    File arquivo = fc.getSelectedFile();
                    
                    try {
                        imagemFaxadaCliente = ManipularImagem.setImagemDimensao(arquivo.getAbsolutePath(), 320, 200);
                        
                        lbFotoFaxadaCliente.setIcon(new ImageIcon(imagemFaxadaCliente));
                        
                    } catch (Exception ex) {
                        // System.out.println(ex.printStackTrace().toString());
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
                }
            }
        }
    }//GEN-LAST:event_lbFotoFaxadaClienteMouseClicked

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        // TODO add your handling code here:
        LimparCampos();
        setCampos(false, false, false, false, false,
                false, false, false, false, false, false,
                false, false, false, false, false, false, false,
                false, false, false, false, false, false, false);
    }//GEN-LAST:event_btLimparActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RecebeInformacao();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lbFotoClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFotoClienteMouseClicked
        // TODO add your handling code here:
        lbFotoCliente.setIcon(null);
    }//GEN-LAST:event_lbFotoClienteMouseClicked

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        try {
            // TODO add your handling code here:
            LimparCampos();
            novoCodigo();
            setCampos(true, true, false, true, true,
                    true, true, true, true, true, true,
                    true, true, true, true, true, true, true,
                    true, true, true, true, true, true, true);
            
            setBotoes(false, true, true, false, true);

        } catch (SQLException ex) {
            Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btNovoActionPerformed

    private void txtNumResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumResidenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumResidenciaActionPerformed

    private void selecDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecDeletarActionPerformed
        // TODO add your handling code here:
        DesejaGravar = "Deseja Deletar os Registros?";
        Gravado = "Registros foram Deletados no Banco!!!";
        nGravar = "Os registros não serão Deletados!!!";
        Cancelar = "Registros não foram Deletados!!!";

        // setBotoes(false, false, true, true, true, true, true, false, false, false);
        if (selecDeletar.isSelected() == true) {
            btGravar.setText("Deletar");
            btGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mcaj/gui/imagens/delete_delete_exit_1577.png")));
            btGravar.setToolTipText("Deletar");
        }

        setBotoes(true, true, true, true, true);

    }//GEN-LAST:event_selecDeletarActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        // TODO add your handling code here:
        BloqueiaLetrasEnumeros bloqueioLetras = new BloqueiaLetrasEnumeros();
        bloqueioLetras.bloqueiaLetras(evt);
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComplementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComplementoActionPerformed

    private void painelFotoFaxadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelFotoFaxadaMouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_painelFotoFaxadaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCliente().setVisible(true);
            }
        });
    }

    public void confJRadioButton() {
        confbotoes = new ButtonGroup();
        confbotoes.add(selecGravar);
        confbotoes.add(selecAtualizar);
        confbotoes.add(selecDeletar);
    }

    public void setBotoes(boolean gravar, boolean limpar, boolean cancelar, boolean novo, boolean buscar) {
        btGravar.setEnabled(gravar);
        btLimpar.setEnabled(limpar);
        btCancelar.setEnabled(cancelar);
        btNovo.setEnabled(novo);
        btBuscar.setEnabled(buscar);

    }

    public void mascararCampos() {
        MascarasDeCampo mascara = new MascarasDeCampo();
        mascara.MascCep(txtCep);
        mascara.MascTel(txtTel);
        mascara.MascCel(txtCel);
        mascara.MascTel(txtTelRecado);
        mascara.MascCel(txtCelRecado);
        try {
            mascara.MascData(jdcDataNasc);
        } catch (ParseException ex) {
            Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void configuracoesDeCampo() {
        txtNome.setDocument(new LimitaCaracteres(120, LimitaCaracteres.TipoEntrada.NOME));
        txtNomeRecado.setDocument(new LimitaCaracteres(113, LimitaCaracteres.TipoEntrada.NOME));
        txtEmail.setDocument(new LimitaCaracteres(90, LimitaCaracteres.TipoEntrada.EMAIL));
        txtEndereco.setDocument(new LimitaCaracteres(70, LimitaCaracteres.TipoEntrada.NOME));
        txtBairro.setDocument(new LimitaCaracteres(70, LimitaCaracteres.TipoEntrada.NOME));
        txtCidade.setDocument(new LimitaCaracteres(70, LimitaCaracteres.TipoEntrada.NOME));
        //txtComplemento.setDocument(new LimitaCaracteres(20, LimitaCaracteres.TipoEntrada.COMPLEMENTO)); 
        txtNumResidencia.setDocument(new LimitaCaracteres(14, LimitaCaracteres.TipoEntrada.REFERENCIA));
        txtUf.setDocument(new LimitaCaracteres(2, LimitaCaracteres.TipoEntrada.NOME));
        txtPontoReferencia.setDocument(new LimitaCaracteres(350, LimitaCaracteres.TipoEntrada.REFERENCIA));
    }

    public void RecebeInformacao() {
        String caminhoabsoluto = "C:\\test-0.jpg";

        try {
            imagemCliente = ManipularImagem.setImagemDimensao(caminhoabsoluto, 140, 200);

            lbFotoCliente.setIcon(new ImageIcon(imagemCliente));

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscaFoto;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btWebcam;
    private javax.swing.JButton btWhatsapp;
    private javax.swing.JComboBox<String> cboTipoDoc;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcDataNasc;
    private javax.swing.JLabel lbBairro;
    private javax.swing.JLabel lbCelRecado;
    private javax.swing.JLabel lbCep;
    private javax.swing.JLabel lbCidade;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbComplemento;
    private javax.swing.JLabel lbDataNasc;
    private javax.swing.JLabel lbDoc;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbEndereco;
    private javax.swing.JLabel lbFotoCliente;
    private javax.swing.JLabel lbFotoFaxadaCliente;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbNomeRecado;
    private javax.swing.JLabel lbNumResidencia;
    private javax.swing.JLabel lbReferencia;
    private javax.swing.JLabel lbTelFixo;
    private javax.swing.JLabel lbTelRecado;
    private javax.swing.JLabel lbUf;
    private javax.swing.JLabel lbWhatsapp;
    private javax.swing.JPanel painelAbaDados;
    private javax.swing.JPanel painelAbaEndereco;
    private javax.swing.JTabbedPane painelAbasClientes;
    private javax.swing.JPanel painelDadosClientes;
    private javax.swing.JPanel painelDeComandos;
    private javax.swing.JPanel painelDeEndereco;
    private javax.swing.JPanel painelDoFrame;
    private javax.swing.JPanel painelFotoFaxada;
    private javax.swing.JRadioButton selecAtualizar;
    private javax.swing.JRadioButton selecDeletar;
    private javax.swing.JRadioButton selecGravar;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCel;
    private javax.swing.JFormattedTextField txtCelRecado;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeRecado;
    private javax.swing.JTextField txtNumResidencia;
    private javax.swing.JTextArea txtPontoReferencia;
    private javax.swing.JFormattedTextField txtTel;
    private javax.swing.JFormattedTextField txtTelRecado;
    private javax.swing.JTextField txtUf;
    // End of variables declaration//GEN-END:variables

    //BANCO DE DADOS
    public void novoCodigo() throws SQLException {

        int codigo;

        codigo = cliente.getProximoCodigo();
        String cod = String.valueOf(codigo);

        if (codigo == 0) {
            cod = "1";
            txtCodigo.setText(cod);
        } else {
            txtCodigo.setText(cod);
        }

    }

    public void Gravar() throws SQLException {

        DaoCadCliente dao = new DaoCadCliente();
        BeanCliente bean = new BeanCliente();

        bean.setCodigo(Integer.parseInt(txtCodigo.getText()));
        if (imagemCliente != null) {
            bean.setImgCliente(ManipularImagem.getImgBytes(imagemCliente));
        }
        bean.setNome(txtNome.getText());
        bean.setDocumento(txtCpf.getText());
        bean.setTipoDocumento(cboTipoDoc.getSelectedItem().toString());
        TratamentoData trataData = new TratamentoData();
        bean.setDataNascimento(trataData.getSqlDate(jdcDataNasc.getDate()));
        bean.setEmail(txtEmail.getText());
        bean.setTel(txtTel.getText());
        bean.setCel(txtCel.getText());
        bean.setNomeRecado(txtNomeRecado.getText());
        bean.setTelRecado(txtTelRecado.getText());
        bean.setCelRecado(txtCelRecado.getText());
        bean.setCep(txtCep.getText());
        bean.setEndereco(txtEndereco.getText());
        bean.setBairro(txtBairro.getText());
        bean.setCidade(txtCidade.getText());
        bean.setUf(txtUf.getText());
        bean.setNumResidencia(txtNumResidencia.getText());
        bean.setComplemento(txtComplemento.getText());
        bean.setReferencia(txtPontoReferencia.getText());
        if (imagemFaxadaCliente != null) {
            bean.setFotoFaxadaCliente(ManipularImagem.getImgBytes(imagemFaxadaCliente));
        }
        dao.inserir(bean);
    }

    public void Atualizar() throws SQLException {
        DaoCadCliente dao = new DaoCadCliente();
        BeanCliente bean = new BeanCliente();

        bean.setCodigo(Integer.parseInt(txtCodigo.getText()));
        if (imagemCliente != null) {
            bean.setImgCliente(ManipularImagem.getImgBytes(imagemCliente));
        }

        bean.setNome(txtNome.getText());
        bean.setDocumento(txtCpf.getText());
        bean.setTipoDocumento(cboTipoDoc.getSelectedItem().toString());
        TratamentoData trataData = new TratamentoData();
        bean.setDataNascimento(trataData.getSqlDate(jdcDataNasc.getDate()));
        System.out.println(bean.getDataNascimento());
        bean.setEmail(txtEmail.getText());
        bean.setTel(txtTel.getText());
        bean.setCel(txtCel.getText());
        bean.setNomeRecado(txtNomeRecado.getText());
        bean.setTelRecado(txtTelRecado.getText());
        bean.setCelRecado(txtCelRecado.getText());
        bean.setCep(txtCep.getText());
        bean.setEndereco(txtEndereco.getText());
        bean.setBairro(txtBairro.getText());
        bean.setCidade(txtCidade.getText());
        bean.setUf(txtUf.getText());
        bean.setNumResidencia(txtNumResidencia.getText());
        bean.setComplemento(txtComplemento.getText());
        bean.setReferencia(txtPontoReferencia.getText());
        if (imagemFaxadaCliente != null) {
            bean.setFotoFaxadaCliente(ManipularImagem.getImgBytes(imagemFaxadaCliente));
        }

        dao.atualizar(bean);
    }

    public void deletar() throws SQLException {
        DaoCadCliente dao = new DaoCadCliente();
        BeanCliente bean = new BeanCliente();

        bean.setCodigo(Integer.parseInt(txtCodigo.getText()));
        dao.deletar(bean);
    }

    public void buscarPorID() throws SQLException {
        int id = Integer.parseInt(txtCodigo.getText());
        DaoCadCliente dao = new DaoCadCliente();
        BeanCliente beanCliente = dao.buscarPorCodigo(id);

        this.txtCodigo.setText(String.valueOf(beanCliente.getCodigo()));
        this.txtNome.setText(beanCliente.getNome());
        ManipularImagem.exibiImagemLabel(beanCliente.getImgCliente(), lbFotoCliente);

        String tipoDoc = beanCliente.getTipoDocumento();
        switch (tipoDoc) {
            case "CPF":
                cboTipoDoc.setSelectedIndex(1);
                break;
            case "CNPJ":
                cboTipoDoc.setSelectedIndex(2);
                break;
            case "RG":
                cboTipoDoc.setSelectedIndex(3);
                break;
            case "CNH":
                cboTipoDoc.setSelectedIndex(4);
                break;
            default:
                cboTipoDoc.setSelectedIndex(0);
                break;
        }

        this.txtCpf.setText(beanCliente.getDocumento());
        this.jdcDataNasc.setDate(beanCliente.getDataNascimento());
        this.txtEmail.setText(beanCliente.getEmail());
        this.txtTel.setText(beanCliente.getTel());
        this.txtCel.setText(beanCliente.getCel());
        this.txtNomeRecado.setText(beanCliente.getNomeRecado());
        this.txtTelRecado.setText(beanCliente.getTelRecado());
        this.txtCelRecado.setText(beanCliente.getCelRecado());
        this.txtCep.setText(beanCliente.getCep());
        this.txtEndereco.setText(beanCliente.getEndereco());
        this.txtBairro.setText(beanCliente.getBairro());
        this.txtCidade.setText(beanCliente.getCidade());
        this.txtUf.setText(beanCliente.getUf());
        this.txtNumResidencia.setText(beanCliente.getNumResidencia());
        this.txtComplemento.setText(beanCliente.getComplemento());
        this.txtPontoReferencia.setText(beanCliente.getReferencia());
        ManipularImagem.exibiImagemLabel(beanCliente.getFotoFaxadaCliente(), lbFotoFaxadaCliente);
        selecGravar.setEnabled(false);

    }

    public void LimparCampos() {
        txtCodigo.setText("");
        txtNome.setText("");
        txtCpf.setText("");
        jdcDataNasc.setDate(null);
        cboTipoDoc.setSelectedIndex(0);
        lbFotoCliente.setIcon(null);
        txtEmail.setText("");
        txtTel.setText("");
        txtCel.setText("");
        txtNomeRecado.setText("");
        txtTelRecado.setText("");
        txtCelRecado.setText("");
        txtCep.setText("");
        txtEndereco.setText("");
        txtBairro.setText("");
        txtCidade.setText("");
        txtUf.setText("");
        txtNumResidencia.setText("");
        txtComplemento.setText("");
        txtPontoReferencia.setText("");
        lbFotoFaxadaCliente.setIcon(null);
        confbotoes.clearSelection();
        setBotoes(false, false, false, true, true);
    }

    public void setCampos(boolean codigo, boolean nome, boolean documento, boolean dataNasc, boolean tipoDoc,
            boolean fotoCliente, boolean email, boolean tel, boolean cel, boolean nomerecado, boolean telrecado,
            boolean celrecado, boolean cep, boolean endereco, boolean bairro, boolean cidade, boolean uf, boolean numresidencia,
            boolean complemento, boolean pontoreferencia, boolean fotofaxada, boolean gravar, boolean atualizar, boolean deletar, boolean habilitar) {

        txtCodigo.setEnabled(codigo);
        txtNome.setEnabled(nome);
        txtCpf.setEnabled(documento);
        jdcDataNasc.setEnabled(dataNasc);
        cboTipoDoc.setEnabled(tipoDoc);
        lbFotoCliente.setEnabled(fotoCliente);
        txtEmail.setEnabled(email);
        txtTel.setEnabled(tel);
        txtCel.setEnabled(cel);
        txtNomeRecado.setEnabled(nomerecado);
        txtTelRecado.setEnabled(telrecado);
        txtCelRecado.setEnabled(celrecado);
        txtCep.setEnabled(cep);
        txtEndereco.setEnabled(endereco);
        txtBairro.setEnabled(bairro);
        txtCidade.setEnabled(cidade);
        txtUf.setEnabled(uf);
        txtNumResidencia.setEnabled(numresidencia);
        txtComplemento.setEnabled(complemento);
        txtPontoReferencia.setEnabled(pontoreferencia);
        lbFotoFaxadaCliente.setEnabled(fotofaxada);
        selecGravar.setEnabled(gravar);
        selecAtualizar.setEnabled(atualizar);
        selecDeletar.setEnabled(deletar);
        fotohabilitada = habilitar;

    }

}//fim da classe
